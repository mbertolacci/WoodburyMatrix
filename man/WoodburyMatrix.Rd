% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/WoodburyMatrix.R
\name{WoodburyMatrix}
\alias{WoodburyMatrix}
\title{Create a Woodbury matrix identity matrix}
\usage{
WoodburyMatrix(A, B, U, V, X, O, symmetric)
}
\arguments{
\item{A}{Matrix \eqn{A} in the definition above.}

\item{B}{Matrix \eqn{B} in the definition above, or list of matrices.}

\item{U}{Matrix \eqn{U} in the definition above, or list of matrices.
Defaults to a diagonal matrix/matrices.}

\item{V}{Matrix \eqn{V} in the definition above, or list of matrices.
Defaults to a diagonal matrix/matrices.}

\item{X}{Matrix \eqn{X} in the definition above, or list of matrices.
Defaults to a diagonal matrix/matrices.}

\item{O}{Optional, precomputed value of \eqn{O}, as defined above. THIS IS
NOT CHECKED FOR CORRECTNESS, and this argument is only provided for advanced
users who have precomputed the matrix for other purposes.}

\item{symmetric}{Logical value, whether to create a symmetric or general
matrix. See Details section for more information.}
}
\value{
A \code{\linkS4class{GWoodburyMatrix}} object for a non-symmetric
matrix, \code{\linkS4class{SWoodburyMatrix}} for a symmetric matrix.
}
\description{
Creates an implicitly defined matrix representing the equation
\deqn{A^{-1} + U B^{-1} V,}
where \eqn{A, U, B} and \eqn{V} are n x n, n x p, p x p and p x n matrices,
respectively. A symmetric special case is also possible with
\deqn{A^{-1} + X B^{-1} X',}
where \eqn{X} is n x p and \eqn{A} and \eqn{B} are additionally symmetric.
The available methods are described in \link{WoodburyMatrix-class}
and in \link{solve}. Multiple B / U / V / X matrices are also supported; see
below
}
\details{
The benefit of using an implicit representation is that the inverse
of this matrix can be efficiently calculated via
\deqn{A - A U O^{-1} V A}
where \eqn{O = B + VAU}, and its determinant by
\deqn{det(O) det(A)^{-1} det(B)^{-1}.}
These relationships are often called the Woodbury matrix identity and the
matrix determinant lemma, respectively. If \eqn{A} and \eqn{B} are sparse or
otherwise easy to deal with, and/or when \eqn{p < n}, manipulating the
matrices via these relationships rather than forming \eqn{W} directly can
have huge advantageous because it avoids having to create the (typically
dense) matrix \deqn{A^{-1} + U B^{-1} V} directly.
}
\section{Symmetric form}{

Where applicable, it's worth using the symmetric form of the matrix. This
takes advantage of the symmetry where possible to speed up operations, takes
less memory, and sometimes has numerical benefits. This function will create
the symmetric form in the following circumstances:
\itemize{
  \item \code{symmetry = TRUE}; or
  \item the argument \code{X} is provided; or
  \item \code{A} and \code{B} are symmetric (according to
  \code{\link[Matrix]{isSymmetric}}) and the arguments \code{U} and
  \code{V} are NOT provided.
}
}

\section{Multiple B matrices}{

A more general form allows for multiple B matrices:
\deqn{A^{-1} + \sum_{i = 1}^n U_i B_i^{-1} V_i,}
and analogously for the symmetric form. You can use this form by providing
a list of matrices as the \code{B} (or \code{U}, \code{V} or \code{X})
arguments. Internally, this is implemented by converting to the standard form
by letting \code{B = bdiag(...the B matrices...)},
\code{U = cbind(..the U matrices...)}, and so on.

The \code{B}, \code{U}, \code{V} and \code{X} values are recycled to the
length of the longest list, so you can, for instance, provide multiple B
matrices but only one U matrix (and vice-versa).
}

\examples{
library(Matrix)
# Example solving a linear system with general matrices
A <- Diagonal(100)
B <- rsparsematrix(100, 100, 0.5)
W <- WoodburyMatrix(A, B)
str(solve(W, rnorm(100)))

# Calculating the determinant of a symmetric system
A <- Diagonal(100)
B <- rsparsematrix(100, 100, 0.5, symmetric = TRUE)
W <- WoodburyMatrix(A, B, symmetric = TRUE)
print(determinant(W))

# Having a lower rank B matrix and an X matrix
A <- Diagonal(100)
B <- rsparsematrix(10, 10, 1, symmetric = TRUE)
X <- rsparsematrix(100, 10, 1)
W <- WoodburyMatrix(A, B, X = X)
str(solve(W, rnorm(100)))

# Multiple B matrices
A <- Diagonal(100)
B1 <- rsparsematrix(100, 100, 1, symmetric = TRUE)
B2 <- rsparsematrix(100, 100, 1, symmetric = TRUE)
W <- WoodburyMatrix(A, B = list(B1, B2))
str(solve(W, rnorm(100)))
}
\references{
More information on the underlying linear algebra can be found
in Harville, D. A. (1997) <doi:10.1007/b98818>.
}
\seealso{
\linkS4class{WoodburyMatrix}, \link{solve}, \link{instantiate}
}
